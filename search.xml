<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[记忆归位]]></title>
    <url>%2F2019%2F05%2F06%2F%E8%AE%B0%E5%BF%86%E5%BD%92%E4%BD%8D%2F</url>
    <content type="text"><![CDATA[通过宽宽的背诵我发现一个儿童记忆的秘密。说这个秘密之前，先说个关于小孩记忆的其他的。 第一，儿童背古诗的时候可以不求甚解，这可能是和大人不一样的地方。但是如果他懂的了诗的意思，背起来会快很多。所以，现在每次背诵前都会要求他先理解。 第二，儿童记忆时间持久。很少忘记。而大人短暂记忆更好，但长期来说较差，至少古诗是这样。当然，对于深刻理解性的内容，大人可以长久记忆。也就是理解中记忆。 现在言归正传，说记忆归位的问题。当然，“记忆归位”这个词是我杜撰的。 我发现，睡觉之前哪怕宽宽背的磕磕碰碰或者读的很熟，第二天早上就能把这首诗背诵出来，晚上就可以背诵的很熟。通过N次这种类似情况，我怀疑，儿童晚上睡眠时大脑在进行有效的知识梳理或规整。而对记忆来说，我取名为记忆归位。 发现这种情况后，遇到他晚上时间不足的情况，就会让他至少把要背诵的内容读熟，因为我相信晚上在睡眠中，他的记忆会自动修复。早上就可以背出来。]]></content>
      <categories>
        <category>随想</category>
      </categories>
      <tags>
        <tag>随想</tag>
        <tag>学习</tag>
        <tag>记忆</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[同一个github账户绑定两个域名]]></title>
    <url>%2F2019%2F04%2F29%2F%E5%90%8C%E4%B8%80%E4%B8%AAgithub%E8%B4%A6%E6%88%B7%E7%BB%91%E5%AE%9A%E4%B8%A4%E4%B8%AA%E5%9F%9F%E5%90%8D%2F</url>
    <content type="text"><![CDATA[一个github账号可以建立很多仓库，但是只能有一个个人主页仓库，其余都是项目仓库。主页仓库就是你的名字.github.io这个，其余的就是https://github.com/hyinli/项目名称这种。 前面已经建立个人主页仓库并绑定域名，现在再利用项目仓库网页并绑定个人域名。具体如下 1 先建立个人项目仓库比如名字kk 2 建gh-pages分支（不能用master） 3 域名解析 其中，IP这样获得 ping 你的名字.github.io 4 根目录的source文件夹见CNAME文件 首行写入你要绑定的域名，可以带www 说明：网上建议裸域名。但是是可以带www的，只是项目仓库必须建在gh-pages分支，master分支会一直提示错误。 5 根目录的’config.yml文件，修改 6 github 项目仓库，setting 填入你的域名，带www —The end—]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>github</tag>
        <tag>hexo</tag>
        <tag>个人域名</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于啃骨头]]></title>
    <url>%2F2019%2F04%2F29%2F%E5%95%83%E9%AA%A8%E5%A4%B4%2F</url>
    <content type="text"><![CDATA[在学习新知识或技能过程中，总会有遇到“创伤”的情况，感觉无法继续，啃不动的感觉。这个时候该怎么做？很多人会放弃，这也是人和人之间导致之后差距越来越大的原因。 没有白付出的努力，哪怕不懂，甚至不求甚解，但还是坚持囫囵吞枣一遍，都会有所收获。等再回头重新开始看第二遍的时候，和第一遍的感觉完全不同。想起小时候读过的一个故事，大概意思是有个人练钢琴的时候从很难的曲子开始，哪怕练习的很磕碰，等弹奏简单曲子的时候也会得心应手。 如果因为难而弃置一边，丢掉的不仅仅是信心，还有对自己无能为力的妥协，而这种妥协会造成以后更多的妥协，终究一切浅尝辄止，等时间流逝之后，除了懊悔，一无所得。 所以，不管懂不懂，逼自己继续去看，如果需要背景知识，那就去找寻。 如此，骨头总能被啃下。 总之，我们要把我们的时间和时间中的思考浸润到啃骨头的过程中。 这里有一个例子，一个朋友告诉我他学C++的时候几近崩溃，因为看了几个月还没有入门，但所幸他没有放弃，后来大概4个月后的某一天，突然明白了。而之前所学的 好像并没有懂的东西也都连贯起来，一下就参悟了其中的道理。现在做的很棒。 有骨头，不要怕，一定会啃下来，只要它值得啃。]]></content>
      <categories>
        <category>随想</category>
      </categories>
      <tags>
        <tag>随想</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github两个账户不能进行push的解决办法]]></title>
    <url>%2F2019%2F04%2F29%2Fgithub%E4%B8%A4%E4%B8%AA%E8%B4%A6%E6%88%B7%E4%B8%8D%E8%83%BD%E8%BF%9B%E8%A1%8Cpush%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%2F</url>
    <content type="text"><![CDATA[因为邮箱和本地电脑问题，我重新申请了github账号，但使用新账户申请博客的时候push出现问题，无法进行推送。windows系统解决办法如下 搜索“凭据管理器”，进入windows凭据，普通凭据， 然后把三个与github相关的删除即可。]]></content>
      <categories>
        <category>github</category>
      </categories>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github+hexo+个人域名建立个人网站]]></title>
    <url>%2F2019%2F04%2F29%2Fgithub%2Bhexo%2B%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[写在前面： 之前一直用hugo结合github使用，这次尝试hexo，发现非常喜欢，可塑性很强。 主要记录一些坑 这个博文主要是大体记录流程，至于中间参考过的3篇建站文章会列出来。总之根据这篇博文你可以完全搭建属于自己的个性网站。 1 github的工作 1 注册github，不再描述 2 建立repo 记得repo名字要和github id一样。也就是如果你的id是hello,那么要申请一个hello.github.io的repo。 2 本地电脑的工作 请参考https://www.jianshu.com/p/189fd945f38f 大体分为以下几步 1下载安装Git 2下载安装node.js 3安装hexo并进行初始化 选择某个盘，创建hexo文件夹，别的名字也行 12npm install -g hexohexo init 4修改config.yml文件，关键是theme 稍许，hexo文件夹里会出现很多内容。用notepad++打开_config.yml文件，修改 title（博客名字） subtite(副标题） author（作者名字） 关键是theme ，系统默认是landscape，也可以查看更多主题。个人比较喜欢next主题，另外， black-blue, BlueLake, pure主题也不错。每个主题都会告诉你下载方式，直接参照进行就行，手动下载或git clone下载。 其余部分可以暂时不动。（现在也可以更改，看2.7.1）下载后的主题会存放在hexo下的themes文件夹里。 这个地方是hugo是不一样的处理方式，hugo要吧主题的example文件下的内容进行copy替换。而hexo是同时处理根目录和主题目录。 5生成网站并在线查看 现在就可以在本地电脑查看雏形了. 12hexo ghexo s 若要查看更多hexo命令，请移步查看更多hexo命令 hexo s后，会提示端口，复制就可以本地访问，都是localhost：4000 6 写第一篇文章 刚才说了hexo是根目录和主题下目录多要修改一些内容。所以，往下会加上根目录（代表\hexo），主题目录代表（\hexo\themes\next）。 写文章是在根目录：\hexo\source_posts。如果你在简书有文章，可以直接复制，可以完美识别。记得如果用toc功能，需要#后又空格，否则不被识别。 写完后，再次hexo s既可以看到更新。 7 部署到github 1 更改根目录_config.yml，最好需要有以下内容 1234deploy: type: git repository: https://github.com/你的名字/你的名字.github.io.git branch: master 2 安装hexo-deployer-git自动部署发布工具 1npm install hexo-deployer-git --save 3 发布到github 1hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 如果初次使用需要输入用户名密码之类，牢记，这样你的github repo就会有你刚才push的内容 4 在线访问 https://你的名字.github.io/ 我的是https://hyinli.github.io/可以查看 3主题配置 这部分花费时间比较多，所以单列出来。 现在雏形已经具备，接下来要进行主题配置，添加一些比较有用的插件等。hexo有很多插件 各种各样的配置，一定有你喜欢的。 这部分主要参考这两篇文章,非常详尽，如果还有你想不到的内容，那就单项google搜索。 Windows下使用hexo搭建博客 Hexo+NexT搭建博客拥抱舒爽 主要包括有 语言，类别，标签，菜单，头像，统计在线时间，访问量，等。这些不再赘述。 1 开启文章目录 请参考Hexo博客NexT主题开启文章目录和调整样式 nextT本身有目录的，我们需要开启它 1 修改custom.styl themes/next/source/css/_custom notpad++打开，添加以下内容 打开及调整目录字体 1234567#文章目录默认展开//文章目录默认展开.post-toc .nav .nav-child &#123; display: block; &#125;#目录字体大小调整.post-toc ol &#123; font-size : 13px; &#125; 修改主题配置文件themes/next/_config.yml 目录换行 123toc: enable: true wrap: true #文章目录无法锚定的问题 假如出现，文章目录生成，但是就不能链接到正确的地方。如果自己的操作没错误，那就执行 123hexo clean命令#然后hexo d -g 4 被百度和google搜索引擎能搜索到，参考上述两篇文章 5 绑定个人域名 1 购买个人域名 我是阿里云买的 2 域名解析 设置如下 3 Hexo设置 \hexo\source下创建CNAME文件（没有后缀，且全部大写），notepad++打开，首行写上你购买的域名 我的就是 http://www.ucco.net 网上有人建议必要加www 但是这样设置后 看起来非常不好看，我又加上了 4 github设置 再回到github，打开你的名字.github.io中的setteings，修正以下内容 custom domain中，]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo github，域名，个人网站</tag>
      </tags>
  </entry>
</search>
